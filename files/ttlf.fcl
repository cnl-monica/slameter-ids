// Block definition (there may be more than one block per file)
FUNCTION_BLOCK udpflood

// Define input variables
VAR_INPUT
    ttlCount : REAL;
    pastTtlCount : REAL;
    ttlCount1 : REAL;
    ttlCount2 : REAL;
    ttlCount3 : REAL;
    ttlCount4 : REAL;
    ttlCount5 : REAL;
    pastTtlCount1 : REAL;
    pastTtlCount2 : REAL;
    pastTtlCount3 : REAL;
    pastTtlCount4 : REAL;
    pastTtlCount5 : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    traffic : REAL;
END_VAR

// Fuzzify input variable 'ttlCount'
FUZZIFY ttlCount
    TERM low := (0,1) (ttlCount1,0);
    TERM medium := (0,0) (ttlCount2,1) (ttlCount3,0);
    TERM high := (ttlCount2,0) (ttlCount3,1) (ttlCount5,0);
    TERM veryhigh := (ttlCount4,0) (ttlCount5,1);
END_FUZZIFY

// Fuzzify input variable 'pastTtlCount'
FUZZIFY pastTtlCount
    TERM low := (0,1) (pastTtlCount1,0);
    TERM medium := (0,0) (pastTtlCount2,1) (pastTtlCount3,0);
    TERM high := (pastTtlCount2,0) (pastTtlCount3,1) (pastTtlCount5,0);
    TERM veryhigh := (pastTtlCount4,0) (pastTtlCount5,1);
END_FUZZIFY

// Defuzzify output variable 'traffic'
DEFUZZIFY traffic
    TERM low := 1;
    TERM normal := 25;
    TERM abnormal := 50;
    TERM attack := 75;
    TERM severeattack := 100;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COGS;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF ttlCount IS low AND pastTtlCount IS veryhigh
                THEN traffic IS abnormal;

    RULE 2 : IF ttlCount IS low AND pastTtlCount IS high
                THEN traffic IS abnormal;

    RULE 3 : IF ttlCount IS low AND pastTtlCount IS medium
                THEN traffic IS normal;

    RULE 4 : IF ttlCount IS low AND pastTtlCount IS low
                THEN traffic IS low;

    RULE 5 : IF ttlCount IS medium AND pastTtlCount IS veryhigh
                THEN traffic IS abnormal;

    RULE 6 : IF ttlCount IS medium AND pastTtlCount IS high
                THEN traffic IS abnormal;

    RULE 7 : IF ttlCount IS medium AND pastTtlCount IS medium
                THEN traffic IS abnormal;

    RULE 8 : IF ttlCount IS medium AND pastTtlCount IS low
                THEN traffic IS normal;
//
    RULE 9 : IF ttlCount IS high AND pastTtlCount IS veryhigh
                THEN traffic IS abnormal;

    RULE 10 : IF ttlCount IS high AND pastTtlCount IS high
                THEN traffic IS severeattack;

    RULE 11 : IF ttlCount IS high AND pastTtlCount IS medium
                THEN traffic IS attack;

    RULE 12 : IF ttlCount IS high AND pastTtlCount IS low
                THEN traffic IS abnormal;
//
    RULE 13: IF ttlCount IS veryhigh AND pastTtlCount IS veryhigh
                THEN traffic IS severeattack;

    RULE 14 : IF ttlCount IS veryhigh AND pastTtlCount IS high
                THEN traffic IS attack;

    RULE 15 : IF ttlCount IS veryhigh AND pastTtlCount IS medium
                THEN traffic IS attack;

    RULE 16 : IF ttlCount IS veryhigh AND pastTtlCount IS low
                THEN traffic IS abnormal;

END_RULEBLOCK

END_FUNCTION_BLOCK
